from __future__ import annotations

from typing import TYPE_CHECKING, Protocol

if TYPE_CHECKING:
    from pio.bus import CQE, SQE


class Kind(Protocol):
    @property
    def kind(self) -> str: ...


class SubSystem(Kind, Protocol):
    @property
    def size(self) -> int: ...
    def start(self) -> None: ...
    def shutdown(self) -> None: ...
    def flush(self, time: int) -> None: ...
    def enqueue(self, sqe: SQE) -> bool: ...
    def process(self, sqes: list[SQE]) -> list[CQE]: ...
    def worker(self) -> None: ...


class AIO(Protocol):
    def attach_subsystem(self, subsystem: SubSystem) -> None: ...
    def start(self) -> None: ...
    def shutdown(self) -> None: ...
    def flush(self, time: int) -> None: ...
    def dispatch(self, sqe: SQE) -> None: ...
    def dequeue(self, n: int) -> list[CQE]: ...
    def enqueue(self, cqe: tuple[CQE, str]) -> None: ...
